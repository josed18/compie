/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package compie;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JComboBox;

/**
 *
 * @author clases
 */
public class Lexico extends javax.swing.JFrame {

    /**
     * Creates new form Lexico
     */
    public Lexico() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jComboBox4 = new javax.swing.JComboBox();
        jComboBox5 = new javax.swing.JComboBox();
        jComboBox6 = new javax.swing.JComboBox();

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Operador" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Separador" }));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Especial" }));

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Letras" }));

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Numeros" }));

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Errores" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox2, 0, 98, Short.MAX_VALUE)
                    .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox5, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox6, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Lexico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Lexico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Lexico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Lexico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Lexico().setVisible(true);
            }
        });
        
    }

    void execute(String txt)
    {
        this.setVisible(true);
        
        //declarar arreglos contenedores
        int all=1000;
        int sum[][]=new int[5][all];
        String todo[][]=new String[5][all];
        int lens[]=new int[5];
        String tipo[]={"operador","separador","especial","letra","numeros"};
        JComboBox combo[]={jComboBox1,jComboBox2,jComboBox3,jComboBox4,jComboBox5};
        String error_str[]=new String[all];
        int errores[]=new int[all];
        int tot_errores=0;
        
        //mostrar string sin espacios
        txt=txt.replaceAll("\\s","");
        txt=txt.toLowerCase();
        jTextArea1.setText(txt+"\n\n");
        int cant=txt.length();
        
        //buscar todos los tipos de simbolos
        for(int d=0;d<5;d+=1)
        {
            //leer letras/numeros/sep/op/esp de la base de datos
            String Gur = queryS("simbolo","simbolos","where tipo='"+tipo[d]+"'","compie");
            String separado[]=Gur.split(" ");
            System.out.println(Gur+"");
            for(int a=0;a<separado.length-1;a+=1)
            {
                separado[a]=separado[a].replaceAll("\\s","");
                todo[d][a]=separado[a];
            }
            lens[d]=separado.length-1;

            //calcular cantidades
            for(int a=0;a<cant;a+=1)
            {
                String caracter=""+txt.charAt(a);
                //sumar caracteres encontrados
                for(int c=0;c<separado.length-1;c+=1)
                {
                    if (caracter.equals(separado[c]))
                    {
                        sum[d][c]+=1;
                        break;
                    }
                }
            }

            //mostrar cantidades
            for(int a=0;a<separado.length-1;a+=1)
            {
                if (sum[d][a]>0)
                {combo[d].addItem(separado[a]+" = "+sum[d][a]);}
            }
        }
        //buscar errores
        for(int a=0;a<cant;a+=1)
        {
            boolean encontrado=false;
            String caracter=""+txt.charAt(a);
            for(int b=0;b<5;b+=1)
            {
                for(int c=0;c<lens[b];c+=1)
                {
                    if (caracter.equals(todo[b][c]))
                    {encontrado=true;}
                }
            }
            //si el caracter no corresponde a ningun tipo, agregarlo como error
            if (!encontrado)
            {
                //System.out.print("error = "+caracter);
                boolean enc=false;
                for(int e=0;e<tot_errores;e+=1)
                {
                    if (caracter.equals(error_str[e]))
                    {
                        errores[e]+=1;
                        enc=true;
                        break;
                    }
                }
                if (!enc)
                {
                    errores[tot_errores]+=1;
                    error_str[tot_errores]=caracter;
                    tot_errores+=1;
                }
            }
        }
        for(int a=0;a<tot_errores;a+=1)
        {jComboBox6.addItem(error_str[a]+" = "+errores[a]);}
    }
    
    /* EJECUTAR UNA CONSULTA*/ 
    public String queryS(String query,String table,String where,String name)
    {
        int c_attr=10;
        String u[]=query.split(", ");
        boolean b[]=new boolean[c_attr];
        for(int a=1;a<c_attr;a+=1){b[a]=false;}
        for(int a=0;a<u.length;a+=1)
        {
            switch(u[a])
            {
                /*case "IDP":b[1]=true;break;
                case "nomb_pb":b[2]=true;break;
                case "tipo_pb":b[3]=true;break;
                case "descripcion":b[4]=true;break;*/
                //case "IDC":b[1]=true;break;
                case "simbolo":b[1]=true;break;
                case "tipo":b[2]=true;break;
                case "descripcion":b[3]=true;break;
                case "nom_pb":b[4]=true;break;
                case "tipo_pb":b[5]=true;break;
                //case "descripcion":b[6]=true;break;
            }
        }

        String select="";
        try
        {
            String myDriver = "org.gjt.mm.mysql.Driver";
            String myUrl = "jdbc:mysql://localhost/"+name;
            Class.forName(myDriver);
            Connection conn = DriverManager.getConnection(myUrl, "root","");
            Statement statement = conn.createStatement();
            String sub=table;
            if (where.length()>0){sub+=" "+where;}
            ResultSet rs = statement.executeQuery("SELECT "+query+" FROM "+sub);
            while(rs.next())
            {
                String u2[]=table.split(", ");
                if (!table.contains(", "))
                {u2[0]=table;}
                for(int a=0;a<u2.length;a+=1)
                {
                    switch(u2[a])
                    {
                        case "simbolos":
                            //if (b[1]){int a1=rs.getInt("IDC");select+=a1+" ";}
                            if (b[1]){String a1=rs.getString("simbolo");select+=a1+" ";}
                            if (b[2]){String a2=rs.getString("tipo");select+=a2+" ";}
                            if (b[3]){String a3=rs.getString("descripcion");select+=a3+" ";}
                            select+="\n";
                        break;
                        case "palabras":
                            //if (b[1]){int a1=rs.getInt("IDC");select+=a1+" ";}
                            if (b[4]){String a4=rs.getString("nom_pb");select+=a4+" ";}
                            if (b[5]){String a5=rs.getString("tipo_pb");select+=a5+" ";}
                            if (b[3]){String a3=rs.getString("descripcion");select+=a3+" ";}
                            select+="\n";
                        break;
                        /*case "tabla2":
                            if (b[1]){int a1=rs.getInt("attr1");select+=a1+" ";}
                            if (b[2]){String a2=rs.getString("attr2");select+=a2+" ";}
                            select+="\n";
                        break;*/
                    }
                }
            }
            statement.close();
        }
        catch (Exception e){System.err.println(e.getMessage());}
        
        return select;
    }
    

    /*
    alfanumerico
    numerico
    caracteres
    
    vector_tipo[]= "alfa,num,char"
    
    vector_alfa[] = "a,b,c,d"
    vector_num[] = "0,1",
    vector_char[]
    */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}

